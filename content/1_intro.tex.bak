\chapter{Einleitung}\label{ch:intro}
Egal ob Spotify, TikTok oder Twitter - mobilen Anwendungen sind aus unserem Lebensalltag nicht mehr wegzudenken.
Dafür sprechen auch die stetig zunehmende Anzahl an App Downloads, welche 2020 218 Billionen betrug \cite{Iqbal.06.05.2021}.\\
Bei der Entwicklung dieser Anwendungen gibt es jedoch immer wieder auftretende Problematiken.
Beispielsweise die fehlende Kompatibilität einer plattformspezifischen App mit verschiedenen Betriebssystemen und der daraus folgende erhöhte Entwicklungsaufwand.
Außerdem muss der Nutzer erst überzeugt werden, die Anwendung zu installieren, bevor er sie überhaupt nutzen kann.

Ein aufstrebendes Konzept, das sich die Universalität des Webs zu nutzen macht, ist das der \acp{pwa}.
Diese besonderen Anwendungen sind über das Web erreichbar und sollen die Freiheiten einer Browseranwendung mit den Vorzügen einer nativen Applikation vereinen.
2015 von dem Chrome Entwickler Alex Russel und dem Designer Frances Berriman als solche benannt, bieten \acp{pwa} immer mehr Möglichkeiten an \cite{Russell.2015}.
Dabei spielt auch die Weiterentwicklung von Webschnittstellen eine bedeutsame Rolle.
Mit Technologien wie den Service Worker und dem App Manifest ermöglichen \acp{pwa} Funktionalitäten, die bislang nativen Anwendungen vorenthalten waren.
Dazu gehören beispielsweise Push Benachrichtigungen, Standortzugriff, Offlinebetrieb und Installation.

Laut dem Online-Statistikportal \textit{Statcounter} nutzen 4,32 Billionen Menschen das Internet über mobile Endgeräte \cite{StatCounter.2021}.
Aufgrund der Vielzahl der Nutzer und der damit verbundenen enormen Technologiepotentials für die Zukunft lohnt sich der Vergleich von \ac{pwa} und Native App – beides Technologien, die in mobile Endgeräten Anwendungen finden. 

\section{Zielsetzung}
Im Rahmen dieser Arbeit soll untersucht werden, welche Vor- und Nachteile das Entwickeln einer \ac{pwa} gegenüber einer nativen App bezüglich Funktionalität, Kompatibilität mit verschiedenen Betriebssystemen und Entwicklungsaufwand bietet.\\
Um beide Verfahren vergleichen zu können, wird für die Entwicklung der Native App das Framework React Native verwendet, da dies - ähnlich zu \acp{pwa} - eine plattformunabhängige Programmierung ermöglicht.
Diese Besonderheit wurde in bisherigen Arbeiten noch nicht betrachtet.\\
Außerdem sollen dabei auch die aktuellen Chancen von \acp{pwa} aufgezeigt und somit die Frage beantwortet werden, ob \acp{pwa} Native Apps zum jetzigen Zeitpunkt ersetzen können.

\section{Umfeld}
Das Thema der Arbeit wird in Zusammenarbeit mit dem IT-Consulting Unternehmen OPITZ CONSULTING bearbeitet.
Die Betreuung findet durch Senior Consultant Michael Müller statt.\\
Das Unternehmen entwickelt Lösungen für seine Kunden in den Bereichen Applications, Analytics, Infrastructure und Integration.
Da sich die Software- und Webentwicklungsbranche rasant verändert und weiterentwickelt, ist es für die Firma unerlässlich, neue Technologien und Innovationen zu erkennen.
Daraufhin kann Wissen in diesen Bereichen aufgebaut werden, um Lösungen mit diesen Technologien potenziellen Kunden anzubieten.
Besonders interessant sind hierbei diejenigen Innovationen, die mit geringem Aufwand eine Vielzahl an Vorteilen mit sich bringen.

\section{Aufbau der Arbeit}
Zuerst soll auf die Grundlagen von mobilen Anwendungen und \acp{pwa} sowie der JavaScript-Bibliothek React und dem Framework React Native eingegangen werden.
Im dritten Kapitel wird ein Kriterienkatalog festgelegt, anhand dessen die implementierten Anwendungen später beurteilt werden.
Dieser soll die Funktionalität, die Kompatibilität mit verschiedenen Betriebssystemen und den Entwicklungsaufwand in Abhängigkeit der verwendeten Technologie berücksichtigen.
Im Anschluss wird die Programmierung der zwei Applikationen vorgestellt und auf spezielle Vorgehensweisen eingegangen.
Der Zweck der Apps ist es, die aktuellen COVID-19 Fallzahlen der offiziellen Datenbank des Robert-Koch-Instituts darzustellen und weiterführende Funktionalitäten wie Installation, Offlinebetrieb, Standortzugriff, Kontaktzugriff und Benachrichtigungen zu unterstützen.
Zuletzt sollen die zwei Anwendungen anhand des Kriterienkatalogs verglichen und bewertet werden.