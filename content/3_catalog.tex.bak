\chapter{Kriterienkatalog zum Vergleich der Anwendungen}\label{ch:catalog}
Nachdem die Grundlagen erläutert wurden, soll nun auf die Kriterien eingegangen werden, nach denen die Anwendungen im Verlauf der Arbeit verglichen werden. Durch eine Literaturrecherche hat sich ergeben, dass dies die elementaren Bausteine einer erfolgreichen Anwendung sind. 

\section{Funktionalität}
Applikationen werden entwickelt, um Nutzern einen Mehrwert in ihrem Leben zu bieten. Jeder mehr Funktionalität eine Anwendung unterstützt, desto mehr Nutzen ist meist gegeben. Egal ob in der Web- oder Appentwicklung, wenn die Anwendung keinen Mehrwert bietet, wird sie nicht genutzt und wird dadurch vom Markt verdrängt.

\subsection{Installierbarkeit und Aktualisierungen}
Damit Apps, die der Nutzer oft verwendet, leichter erreichbar sind, wird es bevorzugt diese auf dem Gerät zu installieren. Falls nun Aktualisierungen des Herstellers verfügbar sind, möchte der Nutzer diese auch erhalten und durchführen können. Für die Anwendung bedeutet das Installieren, dass sie Teile ihres Speichers für die Applikation hergeben muss. 
%Wieso wollen Nutzer Apps installieren können, welchen Mehrwert hat das?
%Lange Zeit war das Kriterium der Installierbarkeit ein signifikanter Unterschied zwischen Nativen Apps und Web Applikationen.

\subsection{Offline-Betrieb}
Eine wichtige Funktion von mobilen Anwendungen ist der Offline-Betrieb. Das bedeutet, dass die Anwendung auch ohne oder unter schlechter Internetverbindung verwenden werden kann. Dabei muss natürlich unterschieden werden zwischen Anwendungen, die generell keinen Zugriff auf das Internet benötigen und jenen, die ihre Funktionalität im Offline-Betrieb einschränken müssen. Meistens bieten Applikationen eine Mischung aus beiden Optionen an. Um aus technischer Sicht eine Unabhängigkeit von der Netzwerkverbindung zu schaffen, müssen Daten lokal im Speicher des Geräts abgelegt werden. Das ermöglicht dem Nutzer seine Daten jederzeit verfügbar zu haben und somit unabhängig von äußeren Umständen zu sein. Vorteilhaft für den Nutzer ist dabei auch, wenn die Prozesse, die im Offline-Betrieb angestoßen wurden, gehalten werden, bis das Gerät wieder eine stabile Internetverbindung hat. Auf diesem Wege wird gewährleistet, dass jegliche Aktivitäten erfolgreich durchgeführt werden. Nachteil des Abspeichern der Daten ist zum einen erhöhten Speicherverbrauch und bei einer großen Anzahl auch eine Steigerung des Batterieverbrauchs.

\subsection{Standortzugriff}
Um mobile Anwendungen auf die eigenen Bedürfnisse anzupassen, ist der Standortzugriff eine Option. Dabei greift die Anwendung durch das Global Positioning System (GPS) auf den Standort des Nutzers zu und kann diese weiterverarbeiten, um standortabhängige Informationen darzustellen. Der Zugriff bezieht sie dabei auf den aktuellen Standort sowie auf Bewegungen des Nutzers. Meist muss bereits während des Installationsprozesses der Applikation die Zustimmung des Nutzers für das Nutzen von standortbezogenen Inhalten eingeholt werden. Wird dies genehmigt, ist es der Anwendung auch möglich im Hintergrund auf GPS-Daten zuzugreifen. Außerdem sind diese Daten sensibel.\\
Gängige Use Cases sind die Abfrage des Standorts für Wetterinformationen, Navigation oder Anzeige von Dienstleistungen in der Nähe.

\subsection{Benachrichtigung}
Neben dem Standortzugriff spielen auch Benachrichtigungen eine große Rolle bei der Interaktion mit Nutzern. Diese lassen sich aus technischer Sicht in zwei Kategorien unterteilen: persistent und nicht-persistente Benachrichtigungen. Sie unterscheiden sich darin, dass erstere nur erscheinen, wenn die Anwendung in dem Moment in Benutzung ist, wohingegen das Empfangen von persistenten Benachrichtigungen jederzeit erfolgen kann. Sie bieten den Vorteil, dass die Nutzer immer wieder auf die Anwendung aufmerksam werden und ihn somit motiviert diese öfters zu nutzen. Wichtig ist hierbei die Zahl der Benachrichtigungen pro Tag oder Woche zu planen. Denn wenn der Nutzer zu viele Nachrichten erhält, kann das als störend empfunden werden und im schlimmsten Fall zur Deaktivierung der Benachrichtigungen oder Deinstallation der Anwendung führen. Push Benachrichtigung können kurze Neuigkeiten durch Texte, Bilder oder Buttons beinhalten. Letzteres ist besonders wichtig, da der Nutzer darüber aus dem Menü heraus mit der Anwendung interagieren und auch auf diese weitergeleitet werden kann.
%Mittlerweile ist es sowohl bei Native Apps als auch bei Webanwendungen und -seiten möglich den Nutzer über Push Benachrichtigungen zu erreichen. Push Benachrichtigungen Re-engaging, Nutzer binden, wie viele Benachrichtigungen sollte man machen laut Studien, was ist zu viel / zu wenig und wie viel Effekt hat es für den Nutzer.


\subsection{User Idle Detection oder Kontaktzugriff oder Geofencing oder !?}


\section{Plattformunabhängigkeit und Kompatibilität}
Durch die große Auswahl von Betriebssystemen und Geräten ist es aufwendig Anwendungen zu implementieren, die allen Ansprüchen genügen. Unternehmen und Entwickler müssen deshalb im Voraus genau abwägen, auf welchen Systeme die Apps später verfügbar sein sollen. 
%Wenn die Apps native in der entsprechenden IDE entwickelt werden, ist es außerdem nicht möglich das Zielbetriebssystem im Nachhinein zu verändern. Sowohl bei Webanwendungen als auch bei Apps ist dies daher ein wichtiges Kriterium.

\section{Entwicklungsaufwand}
Bei der nativen Entwicklung müssen etwaige Änderungen des Konzepts und der Logik der App in die Implementierung der Android und iOS App umgesetzt werden. In Webanwendungen muss in der Regel auf die Darstellung in verschiedenen Browsern geachtet werden.
Gerade wenn schnell reagiert werden soll -- zum Beispiel in der COVID-19-Krise -- ist es praktisch, wenn der Einarbeitungsgrad angemessen und die Entwicklungsaufwand günstig ist, um effektiv und schnell Menschen zu unterstützen. Dabei sind auch Faktoren wie die Komplexität der Anwendung, das Design und die Anzahl der Funktionalitäten ausschlaggebend.
, jedoch lässt sich durch Betrachtung der durchschnittlichen Gehälter einer App- oder Webentwicklers eine ungefähr Kostensumme feststellen. Ein Senior Entwickler in Nordamerika verdient durchschnittlich 101-120 die Stunde, während ein App Entwickler xxx verdient.
